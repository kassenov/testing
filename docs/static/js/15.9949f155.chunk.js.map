{"version":3,"sources":["shared/functions/toArray.js","shared/functions/countWithEmojis.js","shared/components/EmojiTextArea.js"],"names":["MAX_SAFE_INTEGER","argsTag","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","reIsHostCtor","reIsUint","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsVarRange","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsZWJ","reOptMod","rsOptVar","rsSeq","join","rsSymbol","reUnicode","RegExp","reHasUnicode","root","global","Object","Function","baseValues","object","props","array","iteratee","index","length","result","Array","arrayMap","key","mapToArray","map","size","forEach","value","setToArray","set","stringToArray","string","test","hasUnicode","match","unicodeToArray","split","asciiToArray","func","transform","funcProto","prototype","objectProto","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","call","replace","Symbol","iteratorSymbol","iterator","undefined","propertyIsEnumerable","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","isIndex","push","baseIsNative","isObject","isMasked","pattern","isFunction","e","isHostObject","baseKeys","Ctor","constructor","proto","isPrototype","getValue","getTag","ArrayBuffer","resolve","ctorString","isLength","tag","type","values","module","exports","isString","source","copyArray","data","next","done","iteratorToArray","countWithEmojis","str","toArray","emojisToShowFilter","emoji","unified","withStyles","theme","typography","body1","display","border","marginTop","spacing","paddingRight","paddingLeft","paddingBottom","top","right","fontSize","height","floatButtonWrapper","position","bottom","floatButtonSVG","color","palette","primary","light","relative","withTheme","classes","rightContent","placeholder","maxCharacters","emojiSet","inputClassName","onChange","useState","open","setOpen","setValue","characters","setCharacters","onSelectEmoji","useCallback","_characters","_value","native","handleTextFieldChange","event","target","toggleOpen","Grid","container","item","xs","sm","lg","className","TextField","fullWidth","multiline","variant","rows","onInput","InputProps","notchedOutline","IconButton","onClick","FormHelperText","error","Collapse","in","Box","mt","main","style","width","onSelect"],"mappings":"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","file":"static/js/15.9949f155.chunk.js","sourcesContent":["/* eslint-disable */\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nconst argsTag = \"[object Arguments]\";\n\nconst funcTag = \"[object Function]\";\n\nconst genTag = \"[object GeneratorFunction]\";\n\nconst mapTag = \"[object Map]\";\n\nconst objectTag = \"[object Object]\";\n\nconst promiseTag = \"[object Promise]\";\n\nconst setTag = \"[object Set]\";\n\nconst stringTag = \"[object String]\";\n\nconst weakMapTag = \"[object WeakMap]\";\n\nconst dataViewTag = \"[object DataView]\";\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nconst reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to compose unicode character classes. */\nconst rsAstralRange = \"\\\\ud800-\\\\udfff\";\n\nconst rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\";\n\nconst rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\n\nconst rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n\n/** Used to compose unicode capture groups. */\nconst rsAstral = `[${rsAstralRange}]`;\n\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\n\nconst rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\n\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\n\nconst rsNonAstral = `[^${rsAstralRange}]`;\n\nconst rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\n\nconst rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\n\nconst rsZWJ = \"\\\\u200d\";\n\n/** Used to compose unicode regexes. */\nconst reOptMod = `${rsModifier}?`;\n\nconst rsOptVar = `[${rsVarRange}]?`;\n\nconst rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join(\n  \"|\"\n)})${rsOptVar}${reOptMod})*`;\n\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\n\nconst rsSymbol = `(?:${[\n  `${rsNonAstral + rsCombo}?`,\n  rsCombo,\n  rsRegional,\n  rsSurrPair,\n  rsAstral\n].join(\"|\")})`;\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nconst reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, \"g\");\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nconst reHasUnicode = RegExp(\n  `[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`\n);\n\n/** Detect free variable `global` from Node.js. */\nconst freeGlobal =\n  typeof global === \"object\" && global && global.Object === Object && global;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || Function(\"return this\")();\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  let index = -1;\n\n  const length = array ? array.length : 0;\n\n  const result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split(\"\");\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  let index = -1;\n\n  const result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, key => object[key]);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  let result = false;\n  if (value !== null && typeof value.toString !== \"function\") {\n    try {\n      result = !!`${value}`;\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  let data;\n\n  const result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  let index = -1;\n\n  const result = Array(map.size);\n\n  map.forEach((value, key) => {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  let index = -1;\n\n  const result = Array(set.size);\n\n  set.forEach(value => {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/** Used for built-in method references. */\nconst funcProto = Function.prototype;\n\nconst objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nconst coreJsData = root[\"__core-js_shared__\"];\n\n/** Used to detect methods masquerading as native. */\nconst maskSrcKey = (function() {\n  const uid = /[^.]+$/.exec(\n    (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || \"\"\n  );\n  return uid ? `Symbol(src)_1.${uid}` : \"\";\n})();\n\n/** Used to resolve the decompiled source of functions. */\nconst funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nconst hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nconst objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nconst reIsNative = RegExp(\n  `^${funcToString\n    .call(hasOwnProperty)\n    .replace(reRegExpChar, \"\\\\$&\")\n    .replace(\n      /hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\n      \"$1.*?\"\n    )}$`\n);\n\n/** Built-in value references. */\nconst Symbol = root.Symbol;\n\nconst iteratorSymbol = Symbol ? Symbol.iterator : undefined;\n\nconst propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nconst nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nconst DataView = getNative(root, \"DataView\");\n\nconst Map = getNative(root, \"Map\");\n\nconst Promise = getNative(root, \"Promise\");\n\nconst Set = getNative(root, \"Set\");\n\nconst WeakMap = getNative(root, \"WeakMap\");\n\n/** Used to detect maps, sets, and weakmaps. */\nconst dataViewCtorString = toSource(DataView);\n\nconst mapCtorString = toSource(Map);\n\nconst promiseCtorString = toSource(Promise);\n\nconst setCtorString = toSource(Set);\n\nconst weakMapCtorString = toSource(WeakMap);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  const result =\n    isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n\n  const length = result.length;\n\n  const skipIndexes = !!length;\n\n  for (const key in value) {\n    if (\n      (inherited || hasOwnProperty.call(value, key)) &&\n      !(skipIndexes && (key === \"length\" || isIndex(key, length)))\n    ) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  const pattern =\n    isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  const result = [];\n  for (const key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key !== \"constructor\") {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  let index = -1;\n\n  const length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  const value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nlet getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif (\n  (DataView && getTag(new DataView(new ArrayBuffer(1))) !== dataViewTag) ||\n  (Map && getTag(new Map()) !== mapTag) ||\n  (Promise && getTag(Promise.resolve()) !== promiseTag) ||\n  (Set && getTag(new Set()) !== setTag) ||\n  (WeakMap && getTag(new WeakMap()) !== weakMapTag)\n) {\n  getTag = function(value) {\n    const result = objectToString.call(value);\n\n    const Ctor = result === objectTag ? value.constructor : undefined;\n\n    const ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n        case mapCtorString:\n          return mapTag;\n        case promiseCtorString:\n          return promiseTag;\n        case setCtorString:\n          return setTag;\n        case weakMapCtorString:\n          return weakMapTag;\n        default:\n          return;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return (\n    !!length &&\n    (typeof value === \"number\" || reIsUint.test(value)) &&\n    (value > -1 && value % 1 === 0 && value < length)\n  );\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  const Ctor = value && value.constructor;\n\n  const proto = (typeof Ctor === \"function\" && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func !== null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return `${func}`;\n    } catch (e) {}\n  }\n  return \"\";\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return (\n    isArrayLikeObject(value) &&\n    hasOwnProperty.call(value, \"callee\") &&\n    (!propertyIsEnumerable.call(value, \"callee\") ||\n      objectToString.call(value) === argsTag)\n  );\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  const tag = isObject(value) ? objectToString.call(value) : \"\";\n  return tag === funcTag || tag === genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return (\n    typeof value === \"number\" &&\n    value > -1 &&\n    value % 1 === 0 &&\n    value <= MAX_SAFE_INTEGER\n  );\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value;\n  return !!value && (type === \"object\" || type === \"function\");\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value === \"object\";\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return (\n    typeof value === \"string\" ||\n    (!isArray(value) &&\n      isObjectLike(value) &&\n      objectToString.call(value) === stringTag)\n  );\n}\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (iteratorSymbol && value[iteratorSymbol]) {\n    return iteratorToArray(value[iteratorSymbol]());\n  }\n  const tag = getTag(value);\n\n  const func =\n    tag === mapTag ? mapToArray : tag === setTag ? setToArray : values;\n\n  return func(value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = toArray;\n","import toArray from \"./toArray\";\n\n/**\n * Counts the characters in a string and counts emojis correctly.\n *\n * @param {string} str The string to count characters from.\n * @return {number} The number of characters in the string.\n */\nfunction countWithEmojis(str) {\n  return toArray(str).length;\n}\n\nexport default countWithEmojis;\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport {\n  TextField,\n  IconButton,\n  Collapse,\n  FormHelperText,\n  Box,\n  Grid,\n  withStyles\n} from \"@material-ui/core\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport countWithEmojis from \"../functions/countWithEmojis\";\n\nconst styles = theme => ({\n  \"@global\": {\n    \".emoji-mart-category-label\": theme.typography.body1,\n    \".emoji-mart-bar\": { display: \"none !important\" },\n    \".emoji-mart-search input\": {\n      ...theme.typography.body1,\n      ...theme.border\n    },\n    \".emoji-mart-search\": {\n      marginTop: `${theme.spacing(1)}px !important`,\n      paddingRight: `${theme.spacing(1)}px !important`,\n      paddingLeft: `${theme.spacing(1)}px !important`,\n      paddingBottom: `${theme.spacing(1)}px !important`\n    },\n    \".emoji-mart-search-icon\": {\n      top: \"5px !important\",\n      right: \"14px !important\",\n      fontSize: 20\n    },\n    \".emoji-mart-scroll\": {\n      height: 240\n    },\n    \".emoji-mart\": {\n      ...theme.border\n    }\n  },\n  floatButtonWrapper: {\n    position: \"absolute\",\n    bottom: 12,\n    right: 12\n  },\n  floatButtonSVG: {\n    color: theme.palette.primary.light\n  },\n  relative: {\n    position: \"relative\"\n  }\n});\n\n/**\n * Emojis whose unified is greater than 5 sometimes\n * are not displayed correcty in the browser.\n * We won't display them.\n */\nconst emojisToShowFilter = emoji => {\n  if (emoji.unified.length > 5) {\n    return false;\n  }\n  return true;\n};\n\nfunction EmojiTextarea(props) {\n  const {\n    theme,\n    classes,\n    rightContent,\n    placeholder,\n    maxCharacters,\n    emojiSet,\n    inputClassName,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [characters, setCharacters] = useState(0);\n\n  const onSelectEmoji = useCallback(\n    emoji => {\n      let _characters;\n      let _value = value + emoji.native;\n      if (maxCharacters) {\n        _characters = countWithEmojis(_value);\n        if (_characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(_value, _characters);\n      }\n      setValue(_value);\n      setCharacters(_characters);\n    },\n    [value, setValue, setCharacters, maxCharacters, onChange]\n  );\n\n  const handleTextFieldChange = useCallback(\n    event => {\n      const { target } = event;\n      const { value } = target;\n      let characters;\n      if (maxCharacters) {\n        characters = countWithEmojis(value);\n        if (characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(value, characters);\n      }\n      setValue(value);\n      setCharacters(characters);\n    },\n    [maxCharacters, onChange, setValue, setCharacters]\n  );\n\n  const toggleOpen = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n\n  return (\n    <Fragment>\n      <Grid spacing={0} container>\n        <Grid\n          item\n          xs={rightContent ? 8 : 12}\n          sm={rightContent ? 9 : 12}\n          lg={rightContent ? 10 : 12}\n          className={classes.relative}\n        >\n          <TextField\n            fullWidth\n            multiline\n            variant=\"outlined\"\n            rows={6}\n            onInput={handleTextFieldChange}\n            value={value}\n            placeholder={placeholder}\n            InputProps={{\n              classes: {\n                notchedOutline: inputClassName ? inputClassName : null\n              }\n            }}\n          />\n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={toggleOpen}>\n              {open ? (\n                <CloseIcon color=\"primary\" />\n              ) : (\n                <EmojiEmotionsIcon color=\"primary\" />\n              )}\n            </IconButton>\n          </div>\n        </Grid>\n        {rightContent && (\n          <Grid item xs={4} sm={3} lg={2}>\n            {rightContent}\n          </Grid>\n        )}\n      </Grid>\n      {maxCharacters && (\n        <FormHelperText error={characters >= maxCharacters}>\n          {`${characters}/${maxCharacters} characters`}\n        </FormHelperText>\n      )}\n      <Collapse in={open}>\n        <Box mt={1}>\n          <Picker\n            set={emojiSet}\n            color={theme.palette.primary.main}\n            style={{ width: \"100%\" }}\n            onSelect={onSelectEmoji}\n            emojisToShowFilter={emojisToShowFilter}\n          />\n        </Box>\n      </Collapse>\n    </Fragment>\n  );\n}\n\nEmojiTextarea.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  emojiSet: PropTypes.string.isRequired,\n  rightContent: PropTypes.element,\n  placeholder: PropTypes.string,\n  maxCharacters: PropTypes.number,\n  onChange: PropTypes.func,\n  inputClassName: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(EmojiTextarea);\n"],"sourceRoot":""}